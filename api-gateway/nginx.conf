events {
    worker_connections 1024;
}

http {
    upstream auth_service {
        server xpend-auth-service:8081;
    }

    upstream transaction_service {
        server xpend-transaction-service:8082;
    }

    upstream account_service {
        server xpend-account-service:8083;
    }

    upstream category_service {
        server xpend-category-service:8084;
    }

    upstream budget_service {
        server xpend-budget-service:8085;
    }

    upstream group_service {
        server xpend-group-service:8086;
    }

    upstream analytics_service {
        server xpend-analytics-service:8087;
    }

    upstream file_service {
        server xpend-file-service:8088;
    }

    upstream notification_service {
        server xpend-notification-service:8089;
    }

    server {
        listen 8080;
        server_name localhost;

        # Auth Service Routes
        location /auth/ {
            proxy_pass http://auth_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Transaction Service Routes
        location /transactions/ {
            proxy_pass http://transaction_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Account Service Routes
        location /accounts/ {
            proxy_pass http://account_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Category Service Routes
        location /categories/ {
            proxy_pass http://category_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Budget Service Routes
        location /budgets/ {
            proxy_pass http://budget_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Group Service Routes
        location /groups/ {
            proxy_pass http://group_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Analytics Service Routes
        location /analytics/ {
            proxy_pass http://analytics_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File Service Routes
        location /files/ {
            proxy_pass http://file_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Notification Service Routes
        location /notifications/ {
            proxy_pass http://notification_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            return 200 "API Gateway is healthy\n";
            add_header Content-Type text/plain;
        }
    }
}