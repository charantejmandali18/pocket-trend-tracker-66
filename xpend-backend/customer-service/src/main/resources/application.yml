spring:
  application:
    name: auth-service

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/xpend_dev
    username: xpend_user
    password: xpend_pass
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000

  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        generate_statistics: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true

  # Flyway Configuration
  flyway:
    enabled: false

  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # RabbitMQ Configuration
  rabbitmq:
    host: localhost
    port: 5672
    username: xpend_user
    password: xpend_pass

  # Security Configuration
  security:
    user:
      name: admin
      password: admin

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:A4XtDt7i5cfrAAbN4ywf7SfglkAwWXcPu9qvCn4ChI6fn5or2BpG+dba4OA9j9vv}
  access-token:
    expiration: 900000  # 15 minutes
  refresh-token:
    expiration: 2592000000  # 30 days

# Google OAuth Configuration
google:
  oauth:
    client-id: ${GOOGLE_OAUTH_CLIENT_ID:}

# Server Configuration
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

# Logging Configuration
logging:
  level:
    com.xpend.auth: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/auth-service.log

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:postgresql://postgres:5432/xpend_dev
    username: xpend_user
    password: xpend_pass

  data:
    redis:
      host: redis
      port: 6379

  rabbitmq:
    host: rabbitmq
    port: 5672
    username: xpend_user
    password: xpend_pass

logging:
  level:
    org.springframework.security: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN