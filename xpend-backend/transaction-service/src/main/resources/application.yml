spring:
  application:
    name: transaction-service

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/xpend_dev
    username: xpend_user
    password: xpend_pass
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000

  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        generate_statistics: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true

  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0

  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # RabbitMQ Configuration
  rabbitmq:
    host: localhost
    port: 5672
    username: xpend_user
    password: xpend_pass

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970}
  access-token:
    expiration: 900000  # 15 minutes
  refresh-token:
    expiration: 2592000000  # 30 days

# Transaction Service Specific Configuration
transaction:
  encryption:
    secret-key: ${TRANSACTION_ENCRYPTION_KEY:MySecretEncryptionKey123456789012}
    algorithm: AES/ECB/PKCS5Padding
  pagination:
    default-page-size: 20
    max-page-size: 100
  bulk-operations:
    max-batch-size: 500

# Customer Service Integration
customer-service:
  base-url: ${CUSTOMER_SERVICE_URL:http://localhost:8080}
  timeout: 5000

# Server Configuration
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

# Logging Configuration
logging:
  level:
    com.xpend.transaction: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/transaction-service.log

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:postgresql://postgres:5432/xpend_dev
    username: xpend_user
    password: xpend_pass

  data:
    redis:
      host: redis
      port: 6379

  rabbitmq:
    host: rabbitmq
    port: 5672
    username: xpend_user
    password: xpend_pass

# Customer Service Integration (Docker)
customer-service:
  base-url: http://customer-service:8080

logging:
  level:
    org.springframework.security: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN